@page "/counter"
@using Tatneft.Data
@using Blazored.LocalStorage
@using System.Security.Claims
@inject Blazored.LocalStorage.ILocalStorageService localStorageService
@inject AuthenticationStateProvider AuthenticationStateProvider
@inject NavigationManager NavigationManager


<h1>Counter</h1>

<p>Current count: @currentCount</p>

<button class="btn btn-primary" @onclick="IncrementCount">Click me</button>


@code {
    private int currentCount = 0;
    ClaimsPrincipal claimsPrincipal;

    [CascadingParameter]
    private Task<AuthenticationState> authenticationStateTask { get; set; }

    private async Task IncrementCount()
    {
        currentCount++;
    }

    protected override async Task OnInitializedAsync()
    {
        try
        {
            User user = new User();
            user.Token = await localStorageService.GetItemAsync<string>("Token");
            user.TokenRefresh = await localStorageService.GetItemAsync<string>("TokenRefresh");
            user = new DBWorkingSQLite().TokenValidate(user);
            if (user.Id != null)
            {
                user = new DBWorkingSQLite().UserGetById(user);
                ((CustomAuthenticationStateProvider)AuthenticationStateProvider).MarkUserAsAuthenticated(user);
            }
            else
            {

            }
        }
        catch
        {

        }


    }
}


